{"manifest": "ethpm/3", "sources": {"Depositor.vy": {"urls": [], "checksum": {"algorithm": "md5", "hash": "0xecf3a74275745090308ecec19feb645a"}, "content": "# @version 0.3.4\n\nfrom vyper.interfaces import ERC20\n\n# # In goerli\n# # Token address\n# USDC: constant(address) = 0x5FfbaC75EFc9547FBc822166feD19B05Cd5890bb\n# WETH: constant(address) = 0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\n\n# # Address of NonfungiblePositionManager\n# NonfungiblePositionManagerAddress: constant(address) = 0xC36442b4a4522E871399CD717aBDD847Ab11FE88\n# # Address of Uniswap V3 SwapRouter\n# SwapRouterAddress: constant(address) = 0xE592427A0AEce92De3Edee1F18E0157C05861564\n\n# In mainnet\n# Token address\nUSDC: constant(address) = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\nWETH: constant(address) = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\n\n# Address of NonfungiblePositionManager\nNonfungiblePositionManagerAddress: constant(address) = 0xC36442b4a4522E871399CD717aBDD847Ab11FE88\n# Address of Uniswap V3 SwapRouter\nSwapRouterAddress: constant(address) = 0xE592427A0AEce92De3Edee1F18E0157C05861564\n\n# Fee tier of Pool\npoolFee: constant(uint256) = 3000\n\n# Parameter in mint function of NonfungiblePositionManager\nstruct MintParams:\n    token0: address\n    token1: address\n    fee: uint256\n    tickLower: int24\n    tickUpper: int24\n    amount0Desired: uint256\n    amount1Desired: uint256\n    amount0Min: uint256\n    amount1Min: uint256\n    recipient: address\n    deadline: uint256\n\n# Return arguments of mint function of NonfungiblePositionManager\nstruct MintReturnParams:\n    tokenId: uint256\n    liquidity: uint128\n    amount0: uint256\n    amount1: uint256\n\n# Arguments for SwapRouter to swap tokens\nstruct ExactInputSingleParams:\n    tokenIn: address\n    tokenOut: address\n    fee: uint24\n    recipient: address\n    deadline: uint256\n    amountIn: uint256\n    amountOutMinimum: uint256\n    sqrtPriceLimitX96: uint160\n\n# Interface of NonfungiblePositionManager\ninterface INonfungiblePositionManager:\n    def mint(params: MintParams) -> MintReturnParams: nonpayable\n\ninterface ISwapRouter:\n    def exactInputSingle(params: ExactInputSingleParams) -> uint256: payable\n\n# Event for logging that user has deposited\nevent Deposit:\n    depositor: indexed(address)\n    liquidity: uint128\n    amount0: uint256\n    amount1: uint256\n\n# For testing\n@view\n@external\ndef say_hello() -> String[10]:\n    return \"Hello\"\n\n# Deposit with ETH\n@payable\n@external\ndef deposit(tickLower: int24, tickUpper: int24):\n\n    assert msg.value > 0, \"value can't be zero\"\n\n    deadline: uint256 = block.timestamp + 15\n\n    # Divide and Swap ETH to USDC and WETH respectively\n    amount0ToMint: uint256 = ISwapRouter(SwapRouterAddress).exactInputSingle(ExactInputSingleParams({tokenIn: WETH, tokenOut: USDC, fee: 3000, recipient: msg.sender, deadline: deadline, amountIn: msg.value / 2, amountOutMinimum: 0, sqrtPriceLimitX96: 0}), value = msg.value / 2)\n    amount1ToMint: uint256 = ISwapRouter(SwapRouterAddress).exactInputSingle(ExactInputSingleParams({tokenIn: WETH, tokenOut: WETH, fee: 3000, recipient: msg.sender, deadline: deadline, amountIn: msg.value / 2, amountOutMinimum: 0, sqrtPriceLimitX96: 0}), value = msg.value / 2)\n\n    # # Approve NonfungiblePositionManger to transfer swapped USDC and WETH\n    # ERC20(USDC).approve(NonfungiblePositionManagerAddress, amount0ToMint)\n    # ERC20(WETH).approve(NonfungiblePositionManagerAddress, amount1ToMint)\n\n    # # Set mint arguments\n    # params: MintParams = MintParams({token0: USDC, token1: WETH, fee: poolFee, tickLower: tickLower, tickUpper: tickUpper, amount0Desired: amount0ToMint, amount1Desired: amount1ToMint, amount0Min: 0, amount1Min: 0, recipient: msg.sender, deadline: block.timestamp})\n    # # Deposit to USDC-WETH pool with poolFee tier, etc.\n    # result: MintReturnParams = INonfungiblePositionManager(NonfungiblePositionManagerAddress).mint(params)\n\n    # # Log deposit\n    # log Deposit(msg.sender, result.liquidity, result.amount0, result.amount1)\n\n    # # Refund rest USDC to user if it remains\n    # if result.amount0 < amount0ToMint:\n    #     # Remove allowance of NonfungiblePositionManger from this contract\n    #     ERC20(USDC).approve(NonfungiblePositionManagerAddress, 0)\n    #     # Rest amount of USDC after deposit\n    #     refund0: uint256 = amount0ToMint - result.amount0\n    #     # Refund USDC to depositor\n    #     ERC20(USDC).transfer(msg.sender, refund0)\n    \n    # # Refund rest WETH to user if it remains\n    # if result.amount0 < amount0ToMint:\n    #     # Remove allowance of NonfungiblePositionManger from this contract\n    #     ERC20(WETH).approve(NonfungiblePositionManagerAddress, 0)\n    #     # Rest amount of USDC after deposit\n    #     refund1: uint256 = amount1ToMint - result.amount1\n    #     # Refund USDC to depositor\n    #     ERC20(WETH).transfer(msg.sender, refund1)\n\n    # return result", "references": [], "imports": []}}, "contractTypes": {"Depositor": {"contractName": "Depositor", "sourceId": "Depositor.vy", "deploymentBytecode": {"bytecode": "0x6102a4610011610000396102a4610000f36003361161000c5761028e565b60003560e01c63d097363c81186101ff5760443618610294576004358060020b8118610294576040526024358060020b811861029457606052346100a75760136080527f76616c75652063616e2774206265207a65726f0000000000000000000000000060a0526080506080518060a001601f826000031636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b42600f810181811061029457905060805263414bf38960c05273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260e05273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4861010052610bb861012052336101405260805161016052348060011c9050610180526040366101a037602060c061010460dc348060011c905073e592427a0aece92de3edee1f18e0157c058615645af161014c573d600060003e3d6000fd5b60203d106102945760c05160a05263414bf38960e05273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26101005273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc261012052610bb861014052336101605260805161018052348060011c90506101a0526040366101c037602060e061010460fc348060011c905073e592427a0aece92de3edee1f18e0157c058615645af16101ef573d600060003e3d6000fd5b60203d106102945760e05160c052005b346102945763b4598503811861028c57600436186102945760208060805260056040527f48656c6c6f00000000000000000000000000000000000000000000000000000060605260408160800181518082526020830160208301815181525050508051806020830101601f82600003163682375050601f19601f8251602001011690509050810190506080f35b505b60006000fd5b600080fda165767970657283000304"}, "runtimeBytecode": {"bytecode": "0x6003361161000c5761028e565b60003560e01c63d097363c81186101ff5760443618610294576004358060020b8118610294576040526024358060020b811861029457606052346100a75760136080527f76616c75652063616e2774206265207a65726f0000000000000000000000000060a0526080506080518060a001601f826000031636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b42600f810181811061029457905060805263414bf38960c05273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc260e05273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4861010052610bb861012052336101405260805161016052348060011c9050610180526040366101a037602060c061010460dc348060011c905073e592427a0aece92de3edee1f18e0157c058615645af161014c573d600060003e3d6000fd5b60203d106102945760c05160a05263414bf38960e05273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26101005273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc261012052610bb861014052336101605260805161018052348060011c90506101a0526040366101c037602060e061010460fc348060011c905073e592427a0aece92de3edee1f18e0157c058615645af16101ef573d600060003e3d6000fd5b60203d106102945760e05160c052005b346102945763b4598503811861028c57600436186102945760208060805260056040527f48656c6c6f00000000000000000000000000000000000000000000000000000060605260408160800181518082526020830160208301815181525050508051806020830101601f82600003163682375050601f19601f8251602001011690509050810190506080f35b505b60006000fd5b600080fda165767970657283000304"}, "abi": [{"type": "event", "name": "Deposit", "inputs": [{"name": "depositor", "type": "address", "indexed": true}, {"name": "liquidity", "type": "uint128", "indexed": false}, {"name": "amount0", "type": "uint256", "indexed": false}, {"name": "amount1", "type": "uint256", "indexed": false}], "anonymous": false}, {"type": "function", "name": "say_hello", "stateMutability": "view", "inputs": [], "outputs": [{"name": "", "type": "string"}]}, {"type": "function", "name": "deposit", "stateMutability": "payable", "inputs": [{"name": "tickLower", "type": "int24"}, {"name": "tickUpper", "type": "int24"}], "outputs": []}], "userdoc": {}, "devdoc": {}}}}